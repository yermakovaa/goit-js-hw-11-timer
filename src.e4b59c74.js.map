{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","init","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","updateClockface","value","String","padStart","Math","floor","pad","textContent","timer","selector"],"mappings":";;;AA+CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA/CA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAGzBI,EAAAA,WACwB,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EACbC,KAAAA,OAqCT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAlCS,MAAA,WAAA,IAAA,EAAA,KACLC,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKN,WAAaG,EAC9BI,EAAO,EAAKC,kBAAkBF,GAEpC,EAAKG,gBAAgBF,IACpB,OA2BP,CAAA,IAAA,MAxBMG,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAuBrC,CAAA,IAAA,oBAnBoBL,MAAAA,SAAAA,GAQT,MAAA,CAAEd,KAPIoB,KAAKC,MAAMP,EAAQ,OAOjBX,MAND,KAAKmB,IACjBF,KAAKC,MAAOP,EAAQ,MAAyB,OAKzBV,KAHT,KAAKkB,IAAIF,KAAKC,MAAOP,EAAQ,KAAoB,MAGlCT,KAFf,KAAKiB,IAAIF,KAAKC,MAAOP,EAAQ,IAAc,SAa5D,CAAA,IAAA,kBAR+C,MAAA,SAAA,GAA3Bd,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACnCN,EAAKC,KAAKuB,YAAiBvB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMoB,YAAiBpB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKmB,YAAiBnB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKkB,YAAiBlB,GAAAA,OAAAA,OAI/B,EAxCMC,GAwCAkB,EAAQ,IAAIlB,EAAe,CAC/BmB,SAAU,WACVlB,WAAY,IAAII,KAAK;;AChDvB,aADA,QAAA,oBACA,QAAA","file":"src.e4b59c74.js","sourceRoot":"..\\src","sourcesContent":["const refs = {\r\n  days: document.querySelector('span[data-value=\"days\"]'),\r\n  hours: document.querySelector('span[data-value=\"hours\"]'),\r\n  mins: document.querySelector('span[data-value=\"mins\"]'),\r\n  secs: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n  constructor({ targetDate }) {\r\n    this.targetDate = targetDate;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = this.targetDate - currentTime;\r\n      const time = this.getTimeComponents(deltaTime);\r\n\r\n      this.updateClockface(time);\r\n    }, 1000);\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  // Метод для рассчета дней, часов, минут и секунд:\r\n  getTimeComponents(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  updateClockface({ days, hours, mins, secs }) {\r\n    refs.days.textContent = `${days}`;\r\n    refs.hours.textContent = `${hours}`;\r\n    refs.mins.textContent = `${mins}`;\r\n    refs.secs.textContent = `${secs}`;\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('2021, 2, 14'),\r\n});\r\n","import './sass/main.scss';\r\nimport './js/timer';"]}